// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// wrap_pdfinfo
List wrap_pdfinfo(std::string R_input, std::string R_enc, std::string R_opw, std::string R_upw, std::string R_config);
RcppExport SEXP xpdf_wrap_pdfinfo(SEXP R_inputSEXP, SEXP R_encSEXP, SEXP R_opwSEXP, SEXP R_upwSEXP, SEXP R_configSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::string >::type R_input(R_inputSEXP);
    Rcpp::traits::input_parameter< std::string >::type R_enc(R_encSEXP);
    Rcpp::traits::input_parameter< std::string >::type R_opw(R_opwSEXP);
    Rcpp::traits::input_parameter< std::string >::type R_upw(R_upwSEXP);
    Rcpp::traits::input_parameter< std::string >::type R_config(R_configSEXP);
    __result = Rcpp::wrap(wrap_pdfinfo(R_input, R_enc, R_opw, R_upw, R_config));
    return __result;
END_RCPP
}
// wrap_version
std::string wrap_version();
RcppExport SEXP xpdf_wrap_version() {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    __result = Rcpp::wrap(wrap_version());
    return __result;
END_RCPP
}
// wrap_pdftotext
std::string wrap_pdftotext(std::string R_input, std::string R_output, int firstPage, int lastPage, bool physLayout, bool tableLayout, bool linePrinter, bool rawOrder, double fixedPitch, double fixedLineSpacing, bool clipText, std::string R_enc, std::string R_eol, bool noPageBreaks, std::string R_opw, std::string R_upw, bool quiet, std::string R_config);
RcppExport SEXP xpdf_wrap_pdftotext(SEXP R_inputSEXP, SEXP R_outputSEXP, SEXP firstPageSEXP, SEXP lastPageSEXP, SEXP physLayoutSEXP, SEXP tableLayoutSEXP, SEXP linePrinterSEXP, SEXP rawOrderSEXP, SEXP fixedPitchSEXP, SEXP fixedLineSpacingSEXP, SEXP clipTextSEXP, SEXP R_encSEXP, SEXP R_eolSEXP, SEXP noPageBreaksSEXP, SEXP R_opwSEXP, SEXP R_upwSEXP, SEXP quietSEXP, SEXP R_configSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::string >::type R_input(R_inputSEXP);
    Rcpp::traits::input_parameter< std::string >::type R_output(R_outputSEXP);
    Rcpp::traits::input_parameter< int >::type firstPage(firstPageSEXP);
    Rcpp::traits::input_parameter< int >::type lastPage(lastPageSEXP);
    Rcpp::traits::input_parameter< bool >::type physLayout(physLayoutSEXP);
    Rcpp::traits::input_parameter< bool >::type tableLayout(tableLayoutSEXP);
    Rcpp::traits::input_parameter< bool >::type linePrinter(linePrinterSEXP);
    Rcpp::traits::input_parameter< bool >::type rawOrder(rawOrderSEXP);
    Rcpp::traits::input_parameter< double >::type fixedPitch(fixedPitchSEXP);
    Rcpp::traits::input_parameter< double >::type fixedLineSpacing(fixedLineSpacingSEXP);
    Rcpp::traits::input_parameter< bool >::type clipText(clipTextSEXP);
    Rcpp::traits::input_parameter< std::string >::type R_enc(R_encSEXP);
    Rcpp::traits::input_parameter< std::string >::type R_eol(R_eolSEXP);
    Rcpp::traits::input_parameter< bool >::type noPageBreaks(noPageBreaksSEXP);
    Rcpp::traits::input_parameter< std::string >::type R_opw(R_opwSEXP);
    Rcpp::traits::input_parameter< std::string >::type R_upw(R_upwSEXP);
    Rcpp::traits::input_parameter< bool >::type quiet(quietSEXP);
    Rcpp::traits::input_parameter< std::string >::type R_config(R_configSEXP);
    __result = Rcpp::wrap(wrap_pdftotext(R_input, R_output, firstPage, lastPage, physLayout, tableLayout, linePrinter, rawOrder, fixedPitch, fixedLineSpacing, clipText, R_enc, R_eol, noPageBreaks, R_opw, R_upw, quiet, R_config));
    return __result;
END_RCPP
}
